<?xml version="1.0"?>
<!--

     Copyright 2005-2016 Red Hat, Inc.

     Red Hat licenses this file to you under the Apache License, version
     2.0 (the "License"); you may not use this file except in compliance
     with the License.  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
     implied.  See the License for the specific language governing
     permissions and limitations under the License.

-->
<!--
   This is the OSGi Blueprint XML file defining the Camel context and routes.  Because the file is in the
   OSGI-INF/blueprint directory inside our JAR, it will be automatically activated as soon as the bundle is installed.

   The root element for any OSGi Blueprint file is 'blueprint' - you also see the namespace definitions for both the Blueprint
   and the Camel namespaces.
-->
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.0.0"
           xsi:schemaLocation="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.0.0 http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.0.0.xsd
             http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
             http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">

  <!-- OSGi blueprint property placeholder -->
  <cm:property-placeholder id="placeholder" persistent-id="org.jboss.quickstarts.fuse.odata" />

  <bean id="odata" class="org.apache.camel.component.olingo2.Olingo2Component">
    <property name="configuration">
      <bean class="org.apache.camel.component.olingo2.Olingo2Configuration">
        <property name="httpHeaders">
          <map>
            <entry key="AUTHORIZATION" value="${userPassword}" />
          </map>
        </property>
        <property name="serviceUri" value="${serviceUri}"/>
        <property name="contentType" value="${contentType}"/>
      </bean>
    </property>
  </bean>

  <!--
    The namespace for the camelContext element in Blueprint is 'http://camel.apache.org/schema/blueprint'. Additionally,
    we can also define namespace prefixes we want to use them in the XPath expressions in our CBR.

    While it is not required to assign id's to the <camelContext/> and <route/> elements, it is a good idea
    to set those for runtime management purposes (logging, JMX MBeans, ...)
  -->
  <camelContext xmlns="http://camel.apache.org/schema/blueprint" id="odata-example-context">

    <dataFormats>
      <!-- Here we define a Json data format with the id jack and use a Map as the unmarshal type -->
      <json id="jack" library="Jackson" />
    </dataFormats>

    <!--
      When this route is started, it will automatically create the work/odata/input directory where you can drop the
      file that need to be processed.

      The <log/> elements are used to add human-friendly business logging statements. They make it easier to see what the
      route is doing.

      The <to/> element contains the JBoss Data Virtualization destination endpoint.
    -->
    <route id="odata-route">

      <from uri="file:work/odata/input" />

      <log message="Receiving file ${file:name}" />
      <log message="Sending file ${file:name} to JBoss Data Virtualization Server" />

      <unmarshal ref="jack" />
      <to uri="odata://create/BooksMySQL.BOOKS" />

      <log message="Done creating book with ISBN ${body.properties[ISBN]}" />
    </route>
  </camelContext>

</blueprint>